--------------------------   INSERINDO OS PEDIDS   --------------------------

--lembrando que deve ser executado a criação de função e trigger separadamento. Primeiro a função e depois a trigger

-- TRIGGER PARA AUMENTAR O VALOR DO PEDIDO AO SER ADICIONADO UM PRODUTO DO PEDIDO

CREATE OR REPLACE FUNCTION INSERE_PRODUTO_PEDIDO()
RETURNS TRIGGER LANGUAGE PLPGSQL AS $$
DECLARE
	vPRECO DECIMAL(10, 2);

BEGIN
	SELECT PRECO INTO vPRECO FROM PRODUTO
		WHERE PRO_SEQUENCIA = new.PRO_SEQUENCIA;
	UPDATE PEDIDO SET VALOR = VALOR + (new.QUANTIDADE * vPRECO)
		WHERE PED_SEQUENCIA = new.PED_SEQUENCIA;
	RETURN NEW;
END; $$

CREATE TRIGGER TRG_INSERE_PEDIDO_PRODUTO
AFTER INSERT ON PEDIDO_PRODUTO
FOR EACH ROW EXECUTE PROCEDURE INSERE_PRODUTO_PEDIDO();

--TRIGGER PARA BAIXAR O VALOR DO PEDIDO AO SER DELETADO UM PRODUTO DO PEDIDO

CREATE OR REPLACE FUNCTION EXCLUI_PRODUTO_PEDIDO()
RETURNS TRIGGER LANGUAGE PLPGSQL AS $$
DECLARE
	vPRECO DECIMAL(10, 2);

BEGIN
	SELECT PRECO INTO vPRECO FROM PRODUTO
		WHERE PRO_SEQUENCIA = old.PRO_SEQUENCIA;
	UPDATE PEDIDO SET VALOR = VALOR + (old.QUANTIDADE * vPRECO)
		WHERE PED_SEQUENCIA = old.PED_SEQUENCIA;
	RETURN OLD;
END; $$

CREATE TRIGGER TRG_EXCLUI_PRODUTO_PEDIDO
BEFORE DELETE ON PEDIDO_PRODUTO
FOR EACH ROW EXECUTE PROCEDURE EXCLUI_PRODUTO_PEDIDO();


--TRIGGER PARA DAR BAIXA NO ESTOQUE DO INGREDIENTE AO SER INSERIDO EM UM PEDIDO

CREATE OR REPLACE FUNCTION BAIXA_ESTOQUE_INGREDIENTE()
RETURNS TRIGGER LANGUAGE PLPGSQL AS $$
DECLARE

BEGIN
	UPDATE INGREDIENTE SET QUANTIDADE = QUANTIDADE - new.QUANTIDADE
		WHERE ING_SEQUENCIA = new.ING_SEQUENCIA;
	RETURN NEW;
END; $$

CREATE TRIGGER TRG_BAIXA_ESTOQUE_INGREDIENTE
AFTER INSERT ON PEDIDO_PRODUTO_INGREDIENTE
FOR EACH ROW EXECUTE PROCEDURE BAIXA_ESTOQUE_INGREDIENTE();

--TRIGGER PARA RETORNAR O ESTOQUE DO INGREDIENTE AO SER REMOVIDO DE UM PEDIDO

CREATE OR REPLACE FUNCTION RETORNO_ESTOQUE_INGREDIENTE()
RETURNS TRIGGER LANGUAGE PLPGSQL AS $$
DECLARE

BEGIN
	UPDATE INGREDIENTE SET QUANTIDADE = QUANTIDADE + old.QUANTIDADE
		WHERE ING_SEQUENCIA = old.ING_SEQUENCIA;
	RETURN OLD;
END; $$

CREATE TRIGGER TRG_RETORNO_ESTOQUE_INGREDIENTE
BEFORE DELETE ON PEDIDO_PRODUTO_INGREDIENTE
FOR EACH ROW EXECUTE PROCEDURE RETORNO_ESTOQUE_INGREDIENTE();



